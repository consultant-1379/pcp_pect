<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.ericsson.pcp</groupId>
    <artifactId>pcp-parent</artifactId>
    <version>1.0.0</version>
  </parent>
  <artifactId>pcp-pect</artifactId>
  <packaging>nar</packaging>
  <properties>
    <name>PCP PECT - RPM </name>
    <lib.dir>/opt/ericsson/lib</lib.dir>
    <install.dir>/opt/ericsson/pcp/pect</install.dir>
    <versioned.install.dir>${install.dir}/pect-${project.version}</versioned.install.dir>
    <versioned.gzstreamLic.dir>${install.dir}/pect-${project.version}/gzstream</versioned.gzstreamLic.dir>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <cxc>CXC1735783</cxc>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.ericsson.pcp</groupId>
      <artifactId>pect-licensing</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>com.github.maven-nar</groupId>
        <artifactId>nar-maven-plugin</artifactId>
        <version>3.1.0</version>
        <extensions>true</extensions>
        <configuration>
          <decorateLinkerOptions>false</decorateLinkerOptions>
          <linker>
            <name>g++</name>
            <options>
              <option>-nodefaultlibs</option>
              <option>-static-libgcc</option>
              <option>-L${basedir}/src/main/lib</option>
              <option>-Wall</option>
            </options>
            <clearDefaultOptions/>
            <libs>
              <lib>
                <name>ntos</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>ntapi</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>pthread</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>ipoque_detection</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>magicstring</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>crypto</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>gzstream</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>pcap</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>gcc_eh</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>m</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>z</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>log4cxx</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>apr-1</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>aprutil-1</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>expat</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>c</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>stdc++</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>boost_serialization</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
            </libs>
          </linker>
          <cpp>
            <sourceDirectory>${basedir}/src/main/c++</sourceDirectory>
            <includePaths>
              <includePath>${basedir}/src/main/include</includePath>
            </includePaths>
            <systemIncludePaths>
              <systemIncludePath>${basedir}/src/main/system</systemIncludePath>
              <systemIncludePath>${basedir}/src/main/system/linux</systemIncludePath>
              <systemIncludePath>${basedir}/src/main/system/ipoque</systemIncludePath>
            </systemIncludePaths>
            <options>
              <option>-nostdinc</option>
              <option>-g</option>
              <option>-std=c++0x</option>
              <option>-fstack-protector-all</option>
              <option>-O3</option>
              <option>-Wall</option>
            </options>
          </cpp>
          <libraries>
            <library>
              <type>executable</type>
              <!-- <linkcpp>false</linkcpp> -->
            </library>
          </libraries>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>rpm-maven-plugin</artifactId>
        <version>2.1-alpha-1</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>rpm</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <autoRequires>false</autoRequires>
          <name>ERICpcp-pect-${cxc}</name>
          <copyright>commercial</copyright>
          <group>PCP</group>
          <needarch>x86_64</needarch>
          <prefix>/opt/ericsson/pcp/pect</prefix>
          <release>${rstate}</release>
          <mappings>
            <mapping>
              <!-- Mapping dedicated for config files, these will be backed up to a .rpmsave during an upgrade -->
              <directory>${versioned.install.dir}</directory>
              <filemode>744</filemode>
              <username>pcpuser</username>
              <groupname>dc5000</groupname>
              <configuration>true</configuration>
              <sources>
                <source>
                  <location>target/classes/</location>
                  <includes>
                    <include>properties.xml</include>
                    <include>log_config.xml</include>
                  </includes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>${versioned.install.dir}</directory>
              <!-- These files should be _read_only_ as they should never to be modified -->
              <filemode>444</filemode>
              <username>pcpuser</username>
              <groupname>dc5000</groupname>
              <sources>
                <!-- Original config files, for 3-way merge on backup/restore/upgrade -->
                <source>
                  <location>target/classes/properties.xml</location>
                  <destination>properties.xml.original</destination>
                </source>
                <source>
                  <location>target/classes/log_config.xml</location>
                  <destination>log_config.xml.original</destination>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>${versioned.gzstreamLic.dir}</directory>
              <filemode>744</filemode>
              <username>pcpuser</username>
              <groupname>dc5000</groupname>
              <configuration>true</configuration>
              <sources>
                <source>
                  <location>target/classes/gzstream/</location>
                  <includes>
                    <include>gzstream.C</include>
                    <include>gzstream.h</include>
                    <include>LGPL_License.txt</include>
                    <include>index.html</include>
                    <include>logo.gif</include>
                    <include>Makefile</include>
                    <include>MakefileShared</include>
                    <include>README</include>
                    <include>version</include>
                  </includes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <!-- Mapping for all other files in the versioned install directory -->
              <directory>${versioned.install.dir}</directory>
              <filemode>744</filemode>
              <username>pcpuser</username>
              <groupname>dc5000</groupname>
              <configuration>false</configuration>
              <dependency>
                <includes>
                  <include>com.ericsson.pcp:pect-licensing</include>
                </includes>
              </dependency>
              <sources>
                <source>
                  <location>target/nar/pcp-pect-${project.version}-amd64-Linux-gpp-executable/bin/amd64-Linux-gpp/</location>
                  <includes>
                    <include>pcp-pect</include>
                  </includes>
                </source>
                <source>
                  <location>target/classes/</location>
                  <includes>
                    <include>pcp</include>
                    <include>start_pcp.sh</include>
                    <include>stop_pcp.sh</include>
                    <include>pcp-monitor</include>
                    <include>pcp-cronUpdate</include>
                    <include>pcp-cleanup.bsh</include>
                    <include>ApacheLicense2.0</include>
                    <include>BoostLicense_1_0.txt</include>
                  </includes>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>${lib.dir}</directory>
              <filemode>700</filemode>
              <username>pcpuser</username>
              <groupname>dc5000</groupname>
              <configuration>false</configuration>
              <sources>
                <source>
                  <location>src/main/lib/</location>
                  <includes>
                    <include>libgzstream.so</include>
                    <include>libboost_serialization.so.1.52.0</include>
                  </includes>
                </source>
              </sources>
            </mapping>
          </mappings>
          <preinstallScriptlet>
            <script>
              echo "Installing PCP-PECT..."
            </script>
          </preinstallScriptlet>
          <postinstallScriptlet>
            <script>
                # Check if a soft link for latest version of pcp-pect already exists #######
                if [ -L "/opt/ericsson/pcp/pect/pect" ]; then
                    rm /opt/ericsson/pcp/pect/pect
                fi
                ln -s  ${versioned.install.dir} /opt/ericsson/pcp/pect/pect
        
                ##############Create the output locations####################################
                
                addtional_space_configured=0
                
                if [ -n "`mount |grep "/mnt/storage"`" ]; then
                	addtional_space_configured=1
                fi
                ### list of directories to be created under /var/opt/ericsson/pcp or /mnt/storage/ericsson/pcp if it is present.
                
                
                if [ ${addtional_space_configured} -eq 0 ]; then
                    _750DIRS="/var/opt/ericsson/pcp/output/pect/3g /var/opt/ericsson/pcp/output/captool/3g/ /var/opt/ericsson/pcp/output/staple/3g/tcpta-partial/"
                    _700DIRS="/opt/ericsson/pcp /opt/ericsson/config /var/log/ericsson/pcp /var/opt/ericsson/pcp/cache/ /var/opt/ericsson/pcp/temp/captool/ /var/opt/ericsson/pcp/temp/staple/ /var/opt/ericsson/pcp/temp/pect/ " 
                else
                    _750DIRS="/var/opt/ericsson/ /mnt/storage/ericsson/pcp/output/pect/3g /mnt/storage/ericsson/pcp/output/captool/3g/ /mnt/storage/ericsson/pcp/output/staple/3g/tcpta-partial/ /mnt/storage/ericsson/"
                    _700DIRS="/opt/ericsson/pcp /opt/ericsson/config /var/log/ericsson/pcp /mnt/storage/ericsson/pcp/cache/ /mnt/storage/ericsson/pcp/temp/captool/ /mnt/storage/ericsson/pcp/temp/staple/ /mnt/storage/ericsson/pcp/temp/pect/ /mnt/storage/ericsson/pcp/temp/"
                fi
                for DIR in ${_750DIRS}
                do 
                if [ -e ${DIR} ]; then
                    echo File directory ${DIR} already exists
                    chmod 750 -R ${DIR}
                    chown -R pcpuser:dc5000 ${DIR}
                else
                    mkdir -p ${DIR}
                    chmod 750 -R ${DIR}
                    chown -R pcpuser:dc5000 ${DIR}
                    echo File directory ${DIR} created
                fi        
                done
                
                for DIR in ${_700DIRS}
                do 
                if [ -e ${DIR} ]; then
                    echo File directory ${DIR} already exists
                    chmod 700 ${DIR}
                    chown -R pcpuser:dc5000 ${DIR}
                else
                    mkdir -p ${DIR}
                    chmod 700 ${DIR}
                    chown -R pcpuser:dc5000 ${DIR}
                    echo File directory ${DIR} created
                fi        
                done         
                ########### End of pcp output directorties #################################
                
                ########### create soft link if required to addtional space ################
                if [ ${addtional_space_configured} -eq 1 ]; then
	                rm -Rf /var/opt/ericsson/pcp
                    if [ $? -ne 0 ]; then
	                    echo "Failed to remove the existing output and temp dirs in /var/opt/ericsson/pcp/pect/"
                    fi
	                ln -s /mnt/storage/ericsson/pcp /var/opt/ericsson/pcp 
                    if [ $? -ne 0 ]; then
	                    echo "Failed to create the softlink to the new output location"
	                fi            
                fi
                ########### End of create soft link if required to addtional space #########
	           
	            ########## Change the Owner and Permissions of selected directories #

                # Change the owner:group of the install location
                chown -R pcpuser:dc5000 /opt/ericsson/                       
                
                ########## End of change the Owner and Permissions of selected directories #
                
                ########## Check if a soft link for the pcp start-stop init.d script exists
                
                if [ -L "/etc/init.d/pcp" ]; then
                    # Remove the soft link
                    rm -f /etc/init.d/pcp
                fi
                
                # Add soft link for the pcp start-stop init.d script
                ln -s /opt/ericsson/pcp/pect/pect/pcp /etc/init.d/
                
                # Set the pcp init.d script and levels on which pcp should be started
                chkconfig --add pcp
                chkconfig --level 35 pcp on
                
                ########### End of create init.d softlink creation
                
            </script>
          </postinstallScriptlet>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>library</id>
      <build>
        <plugins>
       <plugin>
        <groupId>com.github.maven-nar</groupId>
        <artifactId>nar-maven-plugin</artifactId>
        <version>3.1.0</version>
        <extensions>true</extensions>
        <configuration combine.self="override">
          <decorateLinkerOptions>false</decorateLinkerOptions>
          <linker>
            <name>g++</name>
            <libs>
              <lib>
                <name>ntos</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>ntapi</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>pthread</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>ipoque_detection</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>magicstring</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>crypto</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>gzstream</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>pcap</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>gcc_eh</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>m</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>z</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>log4cxx</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>apr-1</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>aprutil-1</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>expat</name>
                <type>static</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>c</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>stdc++</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
              <lib>
                <name>boost_serialization</name>
                <type>shared</type>
                <directory>${basedir}/src/main/lib</directory>
              </lib>
            </libs>
          </linker>
          <cpp>
            <sourceDirectory>${basedir}/src/main/c++</sourceDirectory>
            <includePaths>
              <includePath>${basedir}/src/main/include</includePath>
            </includePaths>
            <systemIncludePaths>
              <systemIncludePath>${basedir}/src/main/system</systemIncludePath>
              <systemIncludePath>${basedir}/src/main/system/linux</systemIncludePath>
              <systemIncludePath>${basedir}/src/main/system/ipoque</systemIncludePath>
            </systemIncludePaths>
            <options>
              <option>-nostdinc</option>
              <option>-g</option>
              <option>-std=c++0x</option>
              <option>-fstack-protector-all</option>
            </options>
            <includes>
              <include>gtpc_map_serialisation_utils.cc</include>
              <include>logger.cc</include>
              <include>gtpv1_utils.cc</include>
              <include>GTPv1_packetFields.cc</include>
              <include>ArgProcessor.cc</include>
              <include>gtpv1_message_handler.cc</include>
              <include>gtpv1_maps.cc</include>
            </includes>
          </cpp>
          <libraries>
            <library>
              <type>static</type>
              <!-- <linkcpp>false</linkcpp> -->
            </library>
          </libraries>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>rpm-maven-plugin</artifactId>
        <version>2.1-alpha-1</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      </plugins>
      </build>
      </profile>
      </profiles>
</project>
